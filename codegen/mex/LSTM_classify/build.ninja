# CompilerName=msvc170
# Mode=optim
ninja_required_version = 1.3

# Basic folders
root = .
builddir = $root\build\win64
matlabdir = C:\Program Files\MATLAB\R2024b
startdir = C:\Users\nicho\OneDrive\Documents\Spring2025\ENSC405\CapstoneGithub\EEG_Signal_Processing

# Toolchain information
cc = cl
cxx = cl
linker = link
linkerxx = link

cflags =  /c /Zc:__cplusplus /Zp8 /GR /W3 /EHs /nologo /MD /D_CRT_SECURE_NO_DEPRECATE /D_SCL_SECURE_NO_DEPRECATE /D_SECURE_SCL=0   /DMATLAB_MEX_FILE  /DMATLAB_MEX_FILE /O2 /Oy- /DNDEBUG /fp:strict /utf-8 /I "$root" /I "$startdir" /I "$root\interface" /I "$matlabdir\extern\include" /I "." -DMODEL=LSTM_classify_mex /openmp /wd4101 

cxxflags =  /c /Zc:__cplusplus /Zp8 /GR /W3 /EHs /nologo /MD /D_CRT_SECURE_NO_DEPRECATE /D_SCL_SECURE_NO_DEPRECATE /D_SECURE_SCL=0   /DMATLAB_MEX_FILE  /DMATLAB_MEX_FILE /O2 /Oy- /DNDEBUG /fp:strict /utf-8 /I "$root" /I "$startdir" /I "$root\interface" /I "$matlabdir\extern\include" /I "." -DMODEL=LSTM_classify_mex /openmp /wd4101 

ldflags =  /nologo    /DLL /LIBPATH:"$matlabdir\extern\lib\win64\microsoft" libmx.lib libmex.lib libmat.lib kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib  /out:"LSTM_classify_mex.mexw64" /LIBPATH:"$matlabdir\extern\lib\win64\microsoft" libmwblas.lib libemlrt.lib libcovrt.lib libut.lib libmwmathutil.lib libiomp5md.lib /nodefaultlib:vcomp /LIBPATH:"$matlabdir\bin\win64" /export:mexFunction /export:mexfilerequiredapiversion /export:emlrtMexFcnProperties /export:LSTM_classify /export:LSTM_classify_initialize /export:LSTM_classify_terminate /export:LSTM_classify_atexit /export:emxEnsureCapacity_real_T /export:emxFree_real_T /export:emxInit_real_T

ldxxflags =  /nologo    /DLL /LIBPATH:"$matlabdir\extern\lib\win64\microsoft" libmx.lib libmex.lib libmat.lib kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib libMatlabDataArray.lib libMatlabEngine.lib  /out:"LSTM_classify_mex.mexw64" /LIBPATH:"$matlabdir\extern\lib\win64\microsoft" libmwblas.lib libemlrt.lib libcovrt.lib libut.lib libmwmathutil.lib libiomp5md.lib /nodefaultlib:vcomp /LIBPATH:"$matlabdir\bin\win64" /export:mexFunction /export:mexfilerequiredapiversion /export:emlrtMexFcnProperties /export:LSTM_classify /export:LSTM_classify_initialize /export:LSTM_classify_terminate /export:LSTM_classify_atexit /export:emxEnsureCapacity_real_T /export:emxFree_real_T /export:emxInit_real_T

linkobjs = 

# Build Rules
rule cc
    command = $cc $cflags $in /Fo$out

rule cxx
    command = $cxx $cxxflags $in /Fo$out

rule link
    command = $linker @$out.rsp $linkobjs $ldflags
    rspfile = $out.rsp
    rspfile_content = $in

rule linkxx
    command = $linkerxx $in $linkobjs $ldxxflags

# Build
build $builddir\LSTM_classify_data.obj : cc $root\LSTM_classify_data.c
build $builddir\rt_nonfinite.obj : cc $root\rt_nonfinite.c
build $builddir\LSTM_classify_initialize.obj : cc $root\LSTM_classify_initialize.c
build $builddir\LSTM_classify_terminate.obj : cc $root\LSTM_classify_terminate.c
build $builddir\LSTM_classify.obj : cc $root\LSTM_classify.c
build $builddir\indexShapeCheck.obj : cc $root\indexShapeCheck.c
build $builddir\pwelch.obj : cc $root\pwelch.c
build $builddir\computeperiodogram.obj : cc $root\computeperiodogram.c
build $builddir\bandpower.obj : cc $root\bandpower.c
build $builddir\sumMatrixIncludeNaN.obj : cc $root\sumMatrixIncludeNaN.c
build $builddir\diff.obj : cc $root\diff.c
build $builddir\std.obj : cc $root\std.c
build $builddir\predict.obj : cc $root\predict.c
build $builddir\predictForRNN.obj : cc $root\predictForRNN.c
build $builddir\mtimes.obj : cc $root\mtimes.c
build $builddir\unaryElementwise.obj : cc $root\unaryElementwise.c
build $builddir\SoftmaxLayer.obj : cc $root\SoftmaxLayer.c
build $builddir\internal_softmax.obj : cc $root\internal_softmax.c
build $builddir\postProcessOutputToReturnCategorical.obj : cc $root\postProcessOutputToReturnCategorical.c
build $builddir\categorical.obj : cc $root\categorical.c
build $builddir\strtrim.obj : cc $root\strtrim.c
build $builddir\cellstr_unique.obj : cc $root\cellstr_unique.c
build $builddir\cellstr_sort.obj : cc $root\cellstr_sort.c
build $builddir\find.obj : cc $root\find.c
build $builddir\getCodes.obj : cc $root\getCodes.c
build $builddir\_coder_LSTM_classify_api.obj : cc $root\interface\_coder_LSTM_classify_api.c
build $builddir\_coder_LSTM_classify_mex.obj : cc $root\interface\_coder_LSTM_classify_mex.c
build $builddir\strcmp.obj : cc $root\strcmp.c
build $builddir\addBiasApplyActivation.obj : cc $root\addBiasApplyActivation.c
build $builddir\elementwiseOperationInPlace.obj : cc $root\elementwiseOperationInPlace.c
build $builddir\introsort.obj : cc $root\introsort.c
build $builddir\insertionsort.obj : cc $root\insertionsort.c
build $builddir\LSTM_classify_emxutil.obj : cc $root\LSTM_classify_emxutil.c
build $builddir\_coder_LSTM_classify_info.obj : cc $root\interface\_coder_LSTM_classify_info.c
build $builddir\c_mexapi_version.obj : cc $matlabdir\extern\version\c_mexapi_version.c

# Link
build $root\LSTM_classify_mex.mexw64 : link $builddir\LSTM_classify_data.obj $builddir\rt_nonfinite.obj $builddir\LSTM_classify_initialize.obj $builddir\LSTM_classify_terminate.obj $builddir\LSTM_classify.obj $builddir\indexShapeCheck.obj $builddir\pwelch.obj $builddir\computeperiodogram.obj $builddir\bandpower.obj $builddir\sumMatrixIncludeNaN.obj $builddir\diff.obj $builddir\std.obj $builddir\predict.obj $builddir\predictForRNN.obj $builddir\mtimes.obj $builddir\unaryElementwise.obj $builddir\SoftmaxLayer.obj $builddir\internal_softmax.obj $builddir\postProcessOutputToReturnCategorical.obj $builddir\categorical.obj $builddir\strtrim.obj $builddir\cellstr_unique.obj $builddir\cellstr_sort.obj $builddir\find.obj $builddir\getCodes.obj $builddir\_coder_LSTM_classify_api.obj $builddir\_coder_LSTM_classify_mex.obj $builddir\strcmp.obj $builddir\addBiasApplyActivation.obj $builddir\elementwiseOperationInPlace.obj $builddir\introsort.obj $builddir\insertionsort.obj $builddir\LSTM_classify_emxutil.obj $builddir\_coder_LSTM_classify_info.obj $builddir\c_mexapi_version.obj 
